(1)	ARCHI_TYPE fta(	const rate msg_gen_rate := 150, %Number of messages sent from the WSN in one second
(2)					const rate map_gen_rate := 7.5, %Number of messages sent from FTA Manager to Fire fighters application to display the maps
(3)					const rate AR_gen_rate := 60, %Number of messages sent from FTA Manager to Fire fighters application to display the augmented realty
(4)					const rate video_gen_rate := 60, %Number of messages sent from Camera Robot to FTA Manager
(5)					const rate timeout_rate := 1,
(6)					const rate prop_rate := 150, %Number of messages sent from the Base Station to WSN and to FTA Manager
(7)					const boolean flag := false)
(8)	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(9)	% The upper constant formal paramiters comes from the execution graphs and queueing networks 															  %
(10)	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(11)
(12)	ARCHI_ELEM_TYPES
(13)
(14)		ELEM_TYPE Sensors_Type ( const rate msg_gen_rate,
(15)					const rate timeout_rate,
(16)					const boolean flag)
(17)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(18)			% The element sensors represent the entire WSN and consist in 3 different states. The first one, that is the basic state, is the waiting represents
(19)			% the situation in which the sensors have the common behavior and also waits for the agent in case of fire. If the received bit is false, we are
(20)			% in a common situation and so, after the timeout, we can go to the sending status in which the data (msg0) are sent to the Base station and come 
(21)			% back to the waiting state. If the received bit is true we are in alarm situation so we go to the alarming status where the data plus audio (msg1)  
(22)			% are sent to the Base Station and then we come back to the waiting state.
(23)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(24)			BEHAVIOR
(25)				waiting (boolean expected_bit := flag; local boolean received_bit) =
(26)					<receive_bit?(received_bit), _>.
(27)					choice
(28)					{
(29)						cond(received_bit = expected_bit) ->
(30)							<timeout, exp(timeout_rate)>.sending(),
(31)						cond(received_bit != expected_bit) ->
(32)							<activate_audio, inf>.alarming()
(33)					};
(34)
(35)				sending(void; void) =
(36)					<generate_msg0, exp(msg_gen_rate)>.<transmit_msg0!(flag), inf>.waiting(false);
(37)
(38)				alarming(void; void) =
(39)					<generate_msg1, exp(msg_gen_rate)>.<transmit_msg1!(flag), inf>.waiting(false)
(40)
(41)			INPUT_INTERACTIONS
(42)				UNI receive_bit;
(43)					generate_msg0;
(44)				    generate_msg1
(45)
(46)			OUTPUT_INTERACTIONS
(47)				UNI transmit_msg0;
(48)					transmit_msg1
(49)
(50)	ELEM_TYPE BaseStation_Type ( const rate prop_rate,
(51)					const boolean flag)
(52)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(53)			% The element BaseStation has the only function to allow the communication between the WSN and the FTA Manager. The basic behavior is the wait in
(54)			% which if the variable received agent is true it denote that we are in alarm situation so the agent received must be sent to the WSN (transmit_agent).
(55)			% If the received bit (0) is false it denote that we are in a common situation so a normal message is received from the WSN and must be sent to the
(56)			% FTA Manager. If the received bit (1) is false it denote that we are in a alarm situation so an augmented message is received from the WSN and must be 
(57)			% sent to the FTA Manager.
(58)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(59)			BEHAVIOR
(60)				wait (boolean expected_bit := flag; local boolean received_bit0, local boolean received_bit1,local boolean received_agent) =
(61)					<receive_bit0?(received_bit0), _>.<receive_bit1?(received_bit1), _>.<receive_agent?(received_agent), _>.
(62)					choice
(63)					{
(64)						cond(received_agent != flag) ->
(65)							<propagate_agent, exp(prop_rate)>.<transmit_agent!(!flag), inf>.wait(expected_bit),
(66)						cond(received_bit0 = expected_bit) ->
(67)							<propagate_data, exp(prop_rate)>.<transmit_data0!(flag), inf>.wait(expected_bit),
(68)						cond(received_bit0 != expected_bit) ->
(69)							stop,
(70)						cond(received_bit1 = expected_bit) ->
(71)							<propagate_data, exp(prop_rate)>.<transmit_data1!(flag), inf>.wait(expected_bit),
(72)						cond(received_bit1 != expected_bit) ->
(73)							stop
(74)					}
(75)
(76)				INPUT_INTERACTIONS
(77)					UNI propagate_agent;
(78)						propagate_data;
(79)						receive_bit0;
(80)						receive_bit1;
(81)						receive_agent
(82)
(83)				OUTPUT_INTERACTIONS
(84)					UNI transmit_data0;
(85)						transmit_data1;
(86)						transmit_agent
(87)
(88)		ELEM_TYPE FtaManager_Type (const rate map_gen_rate,
(89)					const rate AR_gen_rate, const boolean flag)
(90)			BEHAVIOR
(91)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(92)			% The basic behavior of the Fta Manager element is the receive. We have to choice: if we receive a normal messages from the Base Station (data0) we
(93)			% analyze them and in case of normal temperature the FTA Manager store the data and comes back in receive state instead if the temperature is too high
(94)			% the FTA Manager store the data, send the alarm to fire fighters station, turn on the robot, generate map and send the map to the fire fighters
(95)			% application then we go in the alarm status in which the video received from the robot is augmented with the collected data and sent to the fire
(96)			% fighters application; if we receive an augmented messages (data1) we already are in an alarm state so simply store the data and go to the alarm
(97)			% status for the augemented realty.
(98)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(99)				receive (boolean expected_bit := flag; local boolean received_data0, local boolean received_data1) =
(100)					<receive_data0?(received_data0), _>.<receive_data1?(received_data1), _>.
(101)					choice
(102)					{
(103)						cond(received_data0 = expected_bit) -> %normal message received
(104)							<analyze_data, inf>.
(105)							choice
(106)							{
(107)								<tempnormal, inf>.<store_data, inf>.receive(flag),
(108)								<tempsup50, inf>.<store_data, inf>.<fire_alert!(!flag), inf>.<send_agent!(!flag), inf>.<robot_on!(!flag), inf>.
(109)												<generate_map, exp(map_gen_rate)>.<transmit_map!(!flag), inf>.alarm(!flag)
(110)							},
(111)						cond(received_data1 = expected_bit) -> %augmented message received
(112)							<store_data, inf>.alarm(!flag)
(113)					};
(114)
(115)				alarm (boolean expected_bit; local boolean received_video) =
(116)					<receive_video?(received_video), _>.
(117)					choice
(118)					{
(119)						cond(received_video = expected_bit) -> %robot on
(120)							<generate_AR, exp(AR_gen_rate)>.<transmit_AR!(!flag), inf>.receive(!flag),
(121)						cond(received_video != expected_bit) -> %robot off
(122)							stop
(123)					}
(124)
(125)			INPUT_INTERACTIONS
(126)					UNI receive_data0;
(127)						receive_data1;
(128)						receive_video;
(129)						generate_map;
(130)						generate_AR
(131)
(132)				OUTPUT_INTERACTIONS
(133)					UNI fire_alert;
(134)						send_agent;
(135)						robot_on;
(136)						transmit_map;
(137)						transmit_AR
(138)
(139)		ELEM_TYPE CameraRobot_Type (const rate video_gen_rate, const boolean flag)
(140)			BEHAVIOR
(141)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(142)			% The basic behavior of the Camera Robot element is the waiting. If the received bit (robot) is false the alarm ended and so the robot is turn off.
(143)			% Instead if the received bit is true we are in an alarm situation and so we turn on the robot and go to the transmit state in which the video is
(144)			% created and sent to the FTA Manager. Then we come back to the waiting state.
(145)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(146)				waiting(boolean expected_bit := flag; local boolean robot) =
(147)					<receive_com?(robot), _>.
(148)					choice
(149)					{
(150)						cond(robot = expected_bit) -> %no alarm
(151)							<set_off, inf>.waiting(flag),
(152)						cond(robot != flag) -> %alarm
(153)							<set_on, inf>.transmit()
(154)					};
(155)
(156)				transmit(void;void) =
(157)					<generate_video, exp(video_gen_rate)>.<transmit_video!(!flag), inf>.waiting(flag)
(158)
(159)			INPUT_INTERACTIONS
(160)				UNI receive_com;
(161)					generate_video
(162)
(163)			OUTPUT_INTERACTIONS
(164)				UNI transmit_video
(165)
(166)		ELEM_TYPE Application_Type (const boolean flag)
(167)			BEHAVIOR
(168)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(169)			% The basic behavior of the Application element is the waiting one. If the received bit (alarm) is set to false the element is hidle. If the received
(170)			% bit is true we are in alarm status and so the Application receive the map and the augmented realty from the FTA Manager.
(171)			%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
(172)				waiting(boolean expected_bit := flag; local boolean alarm, local boolean map, local boolean AR) =
(173)					<receive_alarm?(alarm), _>.
(174)					choice
(175)					{
(176)						cond(alarm = expected_bit) ->
(177)							stop,
(178)						cond(alarm != flag) ->
(179)							<receive_map?(map), _>.<receive_AR?(AR), _>.waiting(flag)
(180)					}
(181)
(182)			INPUT_INTERACTIONS
(183)				UNI receive_alarm;
(184)					receive_map;
(185)					receive_AR
(186)
(187)			OUTPUT_INTERACTIONS
(188)				void
(189)
(190)	ARCHI_TOPOLOGY
(191)		ARCHI_ELEM_INSTANCES
(192)			S: Sensors_Type (msg_gen_rate, timeout_rate, flag);
(193)			BS: BaseStation_Type (prop_rate, flag);
(194)			FTA: FtaManager_Type (map_gen_rate, AR_gen_rate, flag);
(195)			CR: CameraRobot_Type (video_gen_rate, flag);
(196)			FFA: Application_Type (flag)
(197)
(198)	ARCHI_INTERACTIONS
(199)			S.generate_msg0;
(200)			S.generate_msg1;
(201)			BS.propagate_data;
(202)			BS.propagate_agent;
(203)			FTA.generate_map;
(204)			FTA.generate_AR;
(205)			CR.generate_video
(206)
(207)	ARCHI_ATTACHMENTS
(208)			FROM S.transmit_msg0 TO BS.receive_bit0;
(209)			FROM S.transmit_msg1 TO BS.receive_bit1;
(210)			FROM BS.transmit_agent TO S.receive_bit;
(211)			FROM FTA.send_agent TO BS.receive_agent;
(212)			FROM BS.transmit_data0 TO FTA.receive_data0;
(213)			FROM BS.transmit_data1 TO FTA.receive_data1;
(214)			FROM CR.transmit_video TO FTA.receive_video;
(215)			FROM FTA.robot_on TO CR.receive_com;
(216)			FROM FTA.fire_alert TO FFA.receive_alarm;
(217)			FROM FTA.transmit_map TO FFA.receive_map;
(218)			FROM FTA.transmit_AR TO FFA.receive_AR
(219)
(220)	END



>>>> 0 errors
>>>> 0 warnings