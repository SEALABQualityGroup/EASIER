%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%  Environment variable %%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ARCHI_TYPE eds(	
				const integer sample_cached_in_rda := 150, %% the rda sends a sample every 5 secs
				const integer responder_number := 2, %% max number of responder possibly in 2Towers simulation
				const rate sensors_sample_rate := 15, %% sampling sensors GOI and REI of a responder
				const rate transfer_rate_lvl_0_net := 12.04, %% (24-(1.2*4))Mb/7.9Kb, is the time needed to transport a single notification after rev2
				const rate transfer_rate_lvl_1_net := 31.25, %% (54-(1.2*4))Mb/7.9Kb, 0.033 is the time needed to transport a single notification after rev2
				const rate disk_store_rate := 8000000, %% (bit) Storing rate of 1MB/sec (8Mb/s)
				const integer simultaneous_notifications := 2 %%  (bit) Maximum number of simultaneous notifications
				)
				
				
ARCHI_ELEM_TYPES

	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%%  System Clock, used to generate sensors samples			%%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	
	ELEM_TYPE Clock_Type(void)
	
	    BEHAVIOR
	    
	      Clock(void;
	            void) =
		<elapse_tick, inf> . Clock()
		    
	    INPUT_INTERACTIONS

	      void
	    
	    OUTPUT_INTERACTIONS
	    
	      AND elapse_tick


	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%%  Responder Data Assistant									%%%%%
	%%%%  specifications of the EDS case study						%%%%%
	%%%%  is the hardware support of responder						%%%%%
	%%%%  is directly connected with Team Leader Data Assistant		%%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		ELEM_TYPE RDA_Type(const integer cached_samples, const rate disk_store_rate, const rate sensors_sample_rate)
		    BEHAVIOR
				StoreData (integer(0..cached_samples) item_num := 0; void) = 
					choice
					{
						cond(item_num < cached_samples) ->	<acquire_sample, _> . StoreData(item_num + 1),
						cond(item_num >= cached_samples) ->	<acquire_sample, _> . <store,exp( disk_store_rate)> . <send_sample, inf> . <acquire_feedback, _> . StoreData(1)
					}
					
				
			INPUT_INTERACTIONS
				
				UNI	acquire_feedback;
				acquire_sample
				
		    OUTPUT_INTERACTIONS
				
				UNI send_sample
				
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%% NetUpReponderTeamleader									%%%%
	%%%% connects the Team Leader DA with its own responders DA		%%%%
	%%%% This channel has 54 Mbit/s like bandwith					%%%%
	%%%% links from responder to team leader						%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	ELEM_TYPE NetUpRT_Type(const integer simultaneous_notifications, const rate upload_rate)

	    BEHAVIOR
			% inserisce nel buffer le richieste e non appena è presenta almeno un elemento, inoltra la richiesta al MA, con una frequenza pari a upload_rate
			TransferData (integer(0..simultaneous_notifications) item_num := 0; void) =  
				choice
				{
					cond(item_num < simultaneous_notifications) ->		<receive, _> . TransferData(item_num + 1),
					cond(item_num > 0) ->				<forward, exp(upload_rate)> . TransferData(item_num - 1)
				}

	    INPUT_INTERACTIONS

			OR receive

	    OUTPUT_INTERACTIONS

			OR forward
	
	
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%% NetDownResponderTeamleader									%%%%
	%%%% connects the Team Leader DA with its own responders DA		%%%%
	%%%% This channel has 54 Mbit/s like bandwith					%%%%
	%%%% links from team leader to responder						%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	ELEM_TYPE NetDownRT_Type(const integer simultaneous_notifications, const rate download_rate)

	    BEHAVIOR
			% inserisce nel buffer le richieste e non appena è presenta almeno un elemento, inoltra la richiesta al LoadBalancer, con una frequenza pari a download_rate
			TransferData (integer(0..simultaneous_notifications) item_num := 0; void) = 
				choice
				{
					cond(item_num < simultaneous_notifications) ->		<receive, _> . TransferData(item_num + 1),
					cond(item_num > 0) ->				<forward, exp(download_rate)> . TransferData(item_num - 1)
				}

	    INPUT_INTERACTIONS

			OR receive			

	    OUTPUT_INTERACTIONS

			OR forward
			
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%%  Team Leader Data Assistant								%%%%%
	%%%%  specifications of the EDS case study						%%%%%
	%%%%  is the hardware support of Team Leader					%%%%%
	%%%%  is directly connected with his own responders DA			%%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		ELEM_TYPE TLDA_Type(void)
		    BEHAVIOR
				TldaState(void; void) = <acquire_sample, _> . <send_sample, inf> . <acquire_feedback, _> . <send_feedback, inf> . TldaState()
				 
				
		    INPUT_INTERACTIONS
			
				UNI acquire_sample;
				acquire_feedback
				
		    OUTPUT_INTERACTIONS
			
				UNI send_sample;
				send_feedback
				
	
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%% NetUpTeamleaderTLWPC										%%%%
	%%%% connects the Team Leader DA with its own TLWPC				%%%%
	%%%% This channel has 24 Mbit/s like bandwith					%%%%
	%%%% and use a bluetooth v4.0 technology						%%%%
	%%%% links from team leader to TLWPC							%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	ELEM_TYPE NetUpTT_Type(const integer simultaneous_notifications, const rate upload_rate)

	    BEHAVIOR
			% inserisce nel buffer le richieste e non appena è presenta almeno un elemento, inoltra la richiesta al MA, con una frequenza pari a upload_rate
			TransferData (integer(0..simultaneous_notifications) item_num := 0; void) =  
				choice
				{
					cond(item_num < simultaneous_notifications) ->		<receive, _> . TransferData(item_num + 1),
					cond(item_num > 0) ->				<forward, exp(upload_rate)> . TransferData(item_num - 1)
				}

	    INPUT_INTERACTIONS

			OR receive

	    OUTPUT_INTERACTIONS

			OR forward
	
	
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%% NetDownTeamleaderTLWPC										%%%%
	%%%% connects the Team Leader DA with its own TLWPC				%%%%
	%%%% This channel has 24 Mbit/s like bandwith					%%%%
	%%%% and use a bluetooth v4.0 technology						%%%%
	%%%% links from TLWPC to Team Leader							%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

	ELEM_TYPE NetDownTT_Type(const integer simultaneous_notifications, const rate download_rate)

	    BEHAVIOR
			% inserisce nel buffer le richieste e non appena è presenta almeno un elemento, inoltra la richiesta al LoadBalancer, con una frequenza pari a download_rate
			TransferData (integer(0..simultaneous_notifications) item_num := 0; void) = 
				choice
				{
					cond(item_num < simultaneous_notifications) ->		<receive, _> . TransferData(item_num + 1),
					cond(item_num > 0) ->				<forward, exp(download_rate)> . TransferData(item_num - 1)
				}

	    INPUT_INTERACTIONS

			OR receive

	    OUTPUT_INTERACTIONS

			UNI forward			
				
	
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
	%%%% TeamLeaderWearableComputers							%%%%%
	%%%% specifications of the EDS case study					%%%%%
	%%%% is the supplie hardware support of team leader			%%%%%
	%%%% is directly connected with Team Leader Data Assistant	%%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		ELEM_TYPE TLWPC_Type(const integer simultaneous_notifications, const rate data_fatch_rate)

			BEHAVIOR
		
				StoreData (integer(0..simultaneous_notifications) item_num := 0; void) = 
					choice
					{
						cond(item_num < simultaneous_notifications) ->		<acquire_sample, _> . StoreData(item_num + 1),
						cond(item_num > 0) ->				<send_feedback, exp(data_fatch_rate)> . StoreData(item_num - 1)
					}
		    
			INPUT_INTERACTIONS
			
				UNI acquire_sample
				
		    OUTPUT_INTERACTIONS
			
				UNI send_feedback	


ARCHI_TOPOLOGY 

	ARCHI_ELEM_INSTANCES

		CK : Clock_Type();
	
		FOR_ALL i IN 1..responder_number
			RD[i] : RDA_Type(sample_cached_in_rda, disk_store_rate, sensors_sample_rate);
		
		TL : TLDA_Type();
		
		WP : TLWPC_Type(1,disk_store_rate);
		
		TR : NetDownRT_Type(simultaneous_notifications,transfer_rate_lvl_1_net);
		
		RT : NetUpRT_Type(simultaneous_notifications, transfer_rate_lvl_1_net);	
		
		WT : NetDownTT_Type(simultaneous_notifications, transfer_rate_lvl_0_net);
		
		TW : NetUpTT_Type(simultaneous_notifications, transfer_rate_lvl_0_net)	

	ARCHI_INTERACTIONS
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%% In this AEMILIA simulation we could not to represent 							%%%%
		%%%% in this aemilia simulation we could not represent the entire system.			%%%%
		%%%% So after careful analysis on the EQNM we have decided to simulation 			%%%%
		%%%% only sensors use cases because are the components that use of more the system	%%%%
		%%%% in particular in this simulation there aren't the extarnal internaction with	%%%%
		%%%% our system																		%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		void
			
	ARCHI_ATTACHMENTS

		FOR_ALL i IN 1..responder_number
				FROM CK.elapse_tick TO RD[i].acquire_sample;
		
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%%% ResponderDataAssistan		%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			FOR_ALL i IN 1..responder_number
				FROM RD[i].send_sample	TO RT.receive;
		
				
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%% Net ReponderTeamleader		%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			FROM RT.forward	TO TL.acquire_sample;
			
			FOR_ALL i IN 1..responder_number
				FROM TR.forward	TO RD[i].acquire_feedback;
		
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%%% TeamLeaderDataAssistan	%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			FROM TL.send_sample	TO TW.receive;	
			FROM TL.send_feedback	TO TR.receive;
			
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%% Net TeamleaderTLWPC		%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			FROM TW.forward	TO WP.acquire_sample;
			FROM WT.forward	TO TL.acquire_feedback;

		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
		%%%%  TeamLeaderWearableComputers %%%%%
		%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
			FROM WP.send_feedback	TO WT.receive
END			
