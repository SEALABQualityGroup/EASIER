<?xml version="1.0" encoding="UTF-8"?>
<ecore:EPackage xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" name="logicalSpecification" nsURI="http://it.univaq.disim.seagroup/logicalSpecification"
    nsPrefix="logicalSpecification">
  <eClassifiers xsi:type="ecore:EClass" name="NamedElement" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="name" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"
        iD="true"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Refactoring" eSuperTypes="#//NamedElement">
    <eOperations name="cloneRefactoring" eType="#//Refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="actions" upperBound="-1"
        eType="#//Action" containment="true" eOpposite="#//Action/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="pre" eType="#//PreCondition"
        containment="true" eOpposite="#//PreCondition/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="post" eType="#//PostCondition"
        containment="true" eOpposite="#//PostCondition/refactoring"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lola4rapsRoot" eType="#//LoLa4RAPSRoot"
        eOpposite="#//LoLa4RAPSRoot/refactorings"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cost" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
        defaultValueLiteral="0.0" derived="true"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfChanges" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="0.0"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Action" eSuperTypes="#//NamedElement">
    <eOperations name="execute" lowerBound="1"/>
    <eOperations name="log" lowerBound="1"/>
    <eOperations name="setParameters" lowerBound="1"/>
    <eOperations name="createPreCondition" lowerBound="1"/>
    <eOperations name="createPostCondition" lowerBound="1"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="numOfChanges" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="0.0"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="cost" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"
        defaultValueLiteral="0.0"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/actions"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true" eOpposite="#//Parameter/action"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="pre" eType="#//PreCondition"
        containment="true" eOpposite="#//PreCondition/action"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="post" eType="#//PostCondition"
        containment="true" eOpposite="#//PostCondition/action"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="model" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EJavaObject"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="SingleValuedParameter" eSuperTypes="#//Parameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" upperBound="-1"
        eType="#//ExistsOperator" eOpposite="#//ExistsOperator/element"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="MultipleValuedParameter" eSuperTypes="#//Parameter">
    <eStructuralFeatures xsi:type="ecore:EReference" name="forAllOperator" upperBound="-1"
        eType="#//ForAllOperator" eOpposite="#//ForAllOperator/collection"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" upperBound="-1"
        eType="#//ExistsOperator" eOpposite="#//ExistsOperator/collection"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Parameter" abstract="true" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="type" lowerBound="1" eType="#//TypesEnum"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/parameters"/>
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="resolvingExpr" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EString"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhsRelationalOperator"
        upperBound="-1" eType="#//RelationalOperator" eOpposite="#//RelationalOperator/lhs"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhsRelationalOperator"
        upperBound="-1" eType="#//RelationalOperator" eOpposite="#//RelationalOperator/rhs"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipattern" eType="#//Antipattern"
        eOpposite="#//Antipattern/parameters"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EEnum" name="TypesEnum">
    <eLiterals name="UML_OPERATION"/>
    <eLiterals name="UML_COMPONENT" value="1"/>
    <eLiterals name="UML_NODE" value="2"/>
    <eLiterals name="REAL" value="3"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Condition" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="conditionFormula" lowerBound="1"
        eType="#//FOLSpecification" containment="true" eOpposite="#//FOLSpecification/condition"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PreCondition" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/pre"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/pre"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="PostCondition" eSuperTypes="#//Condition">
    <eStructuralFeatures xsi:type="ecore:EReference" name="action" eType="#//Action"
        eOpposite="#//Action/post"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactoring" eType="#//Refactoring"
        eOpposite="#//Refactoring/post"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="FOLSpecification" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="condition" eType="#//Condition"
        eOpposite="#//Condition/conditionFormula"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rootOperator" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/folspecification"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipattern" eType="#//Antipattern"
        eOpposite="#//Antipattern/formula"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LogicalOperator" abstract="true" eSuperTypes="#//Operator"/>
  <eClassifiers xsi:type="ecore:EClass" name="VoidOperator" eSuperTypes="#//LogicalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="ForAllOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="collection" lowerBound="1"
        eType="#//MultipleValuedParameter" eOpposite="#//MultipleValuedParameter/forAllOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/forAlloperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="ExistsOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="element" eType="#//SingleValuedParameter"
        eOpposite="#//SingleValuedParameter/existsOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="collection" lowerBound="1"
        eType="#//MultipleValuedParameter" eOpposite="#//MultipleValuedParameter/existsOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" eType="#//Operator"
        containment="true" eOpposite="#//Operator/existsOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="OrOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" lowerBound="2"
        upperBound="-1" eType="#//Operator" containment="true" eOpposite="#//Operator/orOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="NotOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="argument" lowerBound="1"
        eType="#//Operator" containment="true" eOpposite="#//Operator/notOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AndOperator" eSuperTypes="#//LogicalOperator">
    <eStructuralFeatures xsi:type="ecore:EReference" name="arguments" lowerBound="2"
        upperBound="-1" eType="#//Operator" containment="true" eOpposite="#//Operator/andOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="RelationalOperator" abstract="true"
      eSuperTypes="#//Operator">
    <eStructuralFeatures xsi:type="ecore:EAttribute" name="factor" lowerBound="1"
        eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble" defaultValueLiteral="1.0"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lhs" lowerBound="1" eType="#//Parameter"
        eOpposite="#//Parameter/lhsRelationalOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="rhs" lowerBound="1" eType="#//Parameter"
        eOpposite="#//Parameter/rhsRelationalOperator"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="EqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="GreaterEqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessEqualOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="LessOperator" eSuperTypes="#//RelationalOperator"/>
  <eClassifiers xsi:type="ecore:EClass" name="Operator" abstract="true">
    <eStructuralFeatures xsi:type="ecore:EReference" name="folspecification" eType="#//FOLSpecification"
        eOpposite="#//FOLSpecification/rootOperator"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="forAlloperator" eType="#//ForAllOperator"
        eOpposite="#//ForAllOperator/argument"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="notOperator" eType="#//NotOperator"
        eOpposite="#//NotOperator/argument"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="andOperator" eType="#//AndOperator"
        eOpposite="#//AndOperator/arguments"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="orOperator" eType="#//OrOperator"
        eOpposite="#//OrOperator/arguments"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="existsOperator" eType="#//ExistsOperator"
        eOpposite="#//ExistsOperator/argument"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="Antipattern" eSuperTypes="#//NamedElement">
    <eOperations name="setParametersForPartialDetection" lowerBound="1"/>
    <eOperations name="partialDetection" lowerBound="1"/>
    <eOperations name="setParametersForFullDetection" lowerBound="1"/>
    <eOperations name="fullDetection" lowerBound="1"/>
    <eOperations name="log" lowerBound="1"/>
    <eOperations name="createFormula" lowerBound="1"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="lola4rapsRoot" eType="#//LoLa4RAPSRoot"
        eOpposite="#//LoLa4RAPSRoot/antipatterns"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="parameters" upperBound="-1"
        eType="#//Parameter" containment="true" eOpposite="#//Parameter/antipattern"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="formula" lowerBound="1"
        eType="#//FOLSpecification" containment="true" eOpposite="#//FOLSpecification/antipattern"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="LoLa4RAPSRoot" eSuperTypes="#//NamedElement">
    <eStructuralFeatures xsi:type="ecore:EReference" name="refactorings" upperBound="-1"
        eType="#//Refactoring" containment="true" eOpposite="#//Refactoring/lola4rapsRoot"/>
    <eStructuralFeatures xsi:type="ecore:EReference" name="antipatterns" upperBound="-1"
        eType="#//Antipattern" containment="true" eOpposite="#//Antipattern/lola4rapsRoot"/>
  </eClassifiers>
  <eClassifiers xsi:type="ecore:EClass" name="AddAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EClass" name="DeleteAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EClass" name="MoveAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EClass" name="ChangeAction" eSuperTypes="#//Action"/>
  <eClassifiers xsi:type="ecore:EDataType" name="model" instanceTypeName="EObject"/>
  <eSubpackages name="actions" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/actions"
      nsPrefix="logicalSpecificationActions">
    <eSubpackages name="UML" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/actions/uml"
        nsPrefix="logicalSpecificationUMLActions">
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddAction" abstract="true" eSuperTypes="#//AddAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteAction" abstract="true"
          eSuperTypes="#//DeleteAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveAction" abstract="true" eSuperTypes="#//MoveAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddNodeAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="nodeToAddSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="neighborsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="compsToDeployMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allDeployedElemsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNodeToAdd" lowerBound="1"
            eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNeighbors" upperBound="-1"
            eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompsToDeploy" upperBound="-1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlSourcePackage" lowerBound="1"
            eType="#//actions/UML/Package"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddComponentAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="componentToAddSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="deployedCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToAdd" lowerBound="1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlSourcePackage" lowerBound="1"
            eType="#//actions/UML/Package"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetNodes" lowerBound="1"
            upperBound="-1" eType="#//actions/UML/Node"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLAddOperationAction" eSuperTypes="#//actions/UML/UMLAddAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToAddSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToAdd" lowerBound="1"
            eType="#//actions/UML/Operation"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetComp" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteNodeAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="nodeToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlNodeToDel" lowerBound="1"
            eType="#//actions/UML/Node"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteComponentAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="compToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToDel" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLDeleteOperationAction" eSuperTypes="#//actions/UML/UMLDeleteAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToDelSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToDel" lowerBound="1"
            eType="#//actions/UML/Operation"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveComponentAction" eSuperTypes="#//actions/UML/UMLMoveAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="compToMoveSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allArtifactsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allTargetsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allNodesMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allDeployedElemsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlCompToMove" lowerBound="1"
            eType="#//actions/UML/Component"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetNodes" lowerBound="1"
            upperBound="-1" eType="#//actions/UML/Node"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlArtifacts" upperBound="-1"
            eType="#//actions/UML/Artifact"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="UMLMoveOperationAction" eSuperTypes="#//actions/UML/UMLMoveAction">
        <eStructuralFeatures xsi:type="ecore:EReference" name="opToMoveSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="targetCompSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOpsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allCompsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allTargetCompOpsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlOpToMove" lowerBound="1"
            eType="#//actions/UML/Operation"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="umlTargetComp" lowerBound="1"
            eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="Component" instanceClassName="org.eclipse.uml2.uml.Component"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Node" instanceClassName="org.eclipse.uml2.uml.Node"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Package" instanceClassName="org.eclipse.uml2.uml.Package"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Operation" instanceClassName="org.eclipse.uml2.uml.Operation"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Artifact" instanceClassName="org.eclipse.uml2.uml.Artifact"/>
    </eSubpackages>
    <eSubpackages name="AEmilia" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/actions/aemilia"
        nsPrefix="logicalSpecificationAEmiliaActions">
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaAddAction" abstract="true"
          eSuperTypes="#//AddAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaDeleteAction" abstract="true"
          eSuperTypes="#//DeleteAction"/>
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaMoveAction" abstract="true"
          eSuperTypes="#//MoveAction"/>
      <eClassifiers xsi:type="ecore:EDataType" name="ElemType" instanceClassName="metamodel.mmaemilia.ElemType"/>
      <eClassifiers xsi:type="ecore:EDataType" name="InputInteraction" instanceClassName="metamodel.mmaemilia.InputInteraction"/>
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaCloneAEIAction" eSuperTypes="#//actions/AEmilia/AEmiliaAddAction">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceAEI" lowerBound="1"
            eType="#//actions/AEmilia/ArchiElemInstance"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="clonedAEI" lowerBound="1"
            eType="#//actions/AEmilia/ArchiElemInstance"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="listOfInputInteractions"
            upperBound="-1" eType="#//actions/AEmilia/InputInteraction"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="listOfOutputInteractions"
            upperBound="-1" eType="#//actions/AEmilia/OutputInteraction"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="listOfNewAttachments"
            upperBound="-1" eType="#//actions/AEmilia/Attachment"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="aeiToCloneSVP" lowerBound="1"
            eType="#//SingleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="clonedAeiSVP" lowerBound="1"
            eType="#//SingleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOrInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allInLocalInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOutLocalInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allUniInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allLocalInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allAeisMVP" lowerBound="1"
            eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allInRemoteInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allOutRemoteInteractsMVP"
            lowerBound="1" eType="#//MultipleValuedParameter" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EDataType" name="ArchiElemInstance" instanceClassName="metamodel.mmaemilia.ArchiElemInstance"/>
      <eClassifiers xsi:type="ecore:EDataType" name="OutputInteraction" instanceClassName="metamodel.mmaemilia.OutputInteraction"/>
      <eClassifiers xsi:type="ecore:EDataType" name="Attachment" instanceClassName="metamodel.mmaemilia.Attachment"/>
      <eClassifiers xsi:type="ecore:EDataType" name="AEmiliaSpecification" instanceClassName="metamodel.mmaemilia.AEmiliaSpecification"/>
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaConstChangesAction" eSuperTypes="#//actions/AEmilia/AEmiliaChangeAction">
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="sourceConstInit" eType="#//actions/AEmilia/ConstInit"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="factorOfChange" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="sourceConstInitSVP"
            lowerBound="1" eType="#//SingleValuedParameter" containment="true"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="allConstInitsMVP" lowerBound="1"
            eType="#//MultipleValuedParameter" containment="true"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="AEmiliaChangeAction" eSuperTypes="#//ChangeAction"/>
      <eClassifiers xsi:type="ecore:EDataType" name="ConstInit" instanceClassName="metamodel.mmaemilia.Headers.ConstInit"/>
    </eSubpackages>
  </eSubpackages>
  <eSubpackages name="antipatterns" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/antipatterns"
      nsPrefix="logicalSpecificationAntipatterns">
    <eSubpackages name="performance" nsURI="http://it.univaq.disim.seagroup/logicalSpecification/antipatterns/performance"
        nsPrefix="logicalSpecificationPerformanceAntipatterns">
      <eClassifiers xsi:type="ecore:EClass" name="PerformanceAntipattern" abstract="true"
          eSuperTypes="#//Antipattern"/>
      <eClassifiers xsi:type="ecore:EClass" name="BlobPA" eSuperTypes="#//antipatterns/performance/PerformanceAntipattern">
        <eOperations name="setParametersForPartialDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_numClientConnectsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;(OclStringManager.getInstance(null)).getClientConnectsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numClientConnectsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxClientConnectsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxClientConnects)));&#xA;&#x9;&#x9;blobParams.add(getT_maxClientConnectsSVP());&#xA;&#xA;&#x9;&#x9;setF_numSupplierConnectsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;(OclStringManager.getInstance(null)).getSupplierConnectsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numSupplierConnectsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxSupplierConnectsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxSupplierConnects)));&#xA;&#x9;&#x9;blobParams.add(getT_maxSupplierConnectsSVP());&#xA;&#xA;&#x9;&#x9;setF_numSentMsgsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;(OclStringManager.getInstance(null)).getNumSentMsgsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numSentMsgsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxSentMsgsSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxSentMsgs)));&#xA;&#x9;&#x9;blobParams.add(getT_maxSentMsgsSVP());&#xA;&#xA;&#x9;&#x9;setF_numReceivedMsgsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;(OclStringManager.getInstance(null)).getNumReceivedMsgsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numReceivedMsgsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxReceivedMsgsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxReceivedMsgs)));&#xA;&#x9;&#x9;blobParams.add(getT_maxReceivedMsgsSVP());&#xA;&#xA;&#x9;&#x9;if (getF_hwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_hwUtilSVP().getResolvingExpr() != null || !getF_hwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_hwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxHwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxHwUtilSVP().getResolvingExpr() != null || !getT_maxHwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxHwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getF_netUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_netUtilSVP().getResolvingExpr() != null || !getF_netUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_netUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_minNetUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_minNetUtilSVP().getResolvingExpr() != null || !getT_minNetUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_minNetUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxClientConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSupplierConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSentMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxReceivedMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="setParametersForFullDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_numClientConnectsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getClientConnectsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numClientConnectsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxClientConnectsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxClientConnects)));&#xA;&#x9;&#x9;blobParams.add(getT_maxClientConnectsSVP());&#xA;&#xA;&#x9;&#x9;setF_numSupplierConnectsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getSupplierConnectsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numSupplierConnectsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxSupplierConnectsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxSupplierConnects)));&#xA;&#x9;&#x9;blobParams.add(getT_maxSupplierConnectsSVP());&#xA;&#xA;&#x9;&#x9;setF_numSentMsgsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getNumSentMsgsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numSentMsgsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxSentMsgsSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxSentMsgs)));&#xA;&#x9;&#x9;blobParams.add(getT_maxSentMsgsSVP());&#xA;&#xA;&#x9;&#x9;setF_numReceivedMsgsSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getNumReceivedMsgsQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_numReceivedMsgsSVP());&#xA;&#xA;&#x9;&#x9;setT_maxReceivedMsgsSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxReceivedMsgs)));&#xA;&#x9;&#x9;blobParams.add(getT_maxReceivedMsgsSVP());&#xA;&#xA;&#x9;&#x9;setF_hwUtilSVP(Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;.createSingleValueParameter(OclStringManager.getInstance(null).getHwUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_hwUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_maxHwUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxHwUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_maxHwUtilSVP());&#xA;&#xA;&#x9;&#x9;setF_netUtilSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getNetUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_netUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_minNetUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_minNetUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_minNetUtilSVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxClientConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSupplierConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSentMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxReceivedMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minNetUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="createFormula" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="FOLSpecification blobCF = LogicalSpecificationFactory.eINSTANCE.createFOLSpecification();&#xA;&#x9;&#x9;blobCF.setName(&quot;BlobFormula&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator blobCFAnd = LogicalSpecificationFactory.eINSTANCE.createAndOperator();&#xA;&#xA;&#x9;&#x9;OrOperator blobCFAndOr1 = LogicalSpecificationFactory.eINSTANCE.createOrOperator();&#xA;&#x9;&#x9;GreaterEqualOperator blobCFAndOr1Geq1 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr1Geq1.setLhs(getF_numClientConnectsSVP());&#xA;&#x9;&#x9;blobCFAndOr1Geq1.setRhs(getT_maxClientConnectsSVP());&#xA;&#x9;&#x9;GreaterEqualOperator blobCFAndOr1Geq2 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr1Geq2.setLhs(getF_numSupplierConnectsSVP());&#xA;&#x9;&#x9;blobCFAndOr1Geq2.setRhs(getT_maxSupplierConnectsSVP());&#xA;&#x9;&#x9;blobCFAndOr1.getArguments().add(blobCFAndOr1Geq1);&#xA;&#x9;&#x9;blobCFAndOr1.getArguments().add(blobCFAndOr1Geq2);&#xA;&#xA;&#x9;&#x9;OrOperator blobCFAndOr2 = LogicalSpecificationFactory.eINSTANCE.createOrOperator();&#xA;&#x9;&#x9;GreaterEqualOperator blobCFAndOr2Geq1 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr2Geq1.setLhs(getF_numSentMsgsSVP());&#xA;&#x9;&#x9;blobCFAndOr2Geq1.setRhs(getT_maxSentMsgsSVP());&#xA;&#x9;&#x9;GreaterEqualOperator blobCFAndOr2Geq2 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr2Geq2.setLhs(getF_numReceivedMsgsSVP());&#xA;&#x9;&#x9;blobCFAndOr2Geq2.setRhs(getT_maxReceivedMsgsSVP());&#xA;&#x9;&#x9;blobCFAndOr2.getArguments().add(blobCFAndOr2Geq1);&#xA;&#x9;&#x9;blobCFAndOr2.getArguments().add(blobCFAndOr2Geq2);&#xA;&#xA;&#x9;&#x9;OrOperator blobCFAndOr3 = LogicalSpecificationFactory.eINSTANCE.createOrOperator();&#xA;&#x9;&#x9;GreaterEqualOperator blobCFAndOr3Geq1 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr3Geq1.setLhs(getF_hwUtilSVP());&#xA;&#x9;&#x9;blobCFAndOr3Geq1.setRhs(getT_maxHwUtilSVP());&#xA;&#x9;&#x9;LessEqualOperator blobCFAndOr3Geq2 = LogicalSpecificationFactory.eINSTANCE.createLessEqualOperator();&#xA;&#x9;&#x9;blobCFAndOr3Geq2.setLhs(getF_netUtilSVP());&#xA;&#x9;&#x9;blobCFAndOr3Geq2.setRhs(getT_minNetUtilSVP());&#xA;&#x9;&#x9;blobCFAndOr3.getArguments().add(blobCFAndOr3Geq1);&#xA;&#x9;&#x9;blobCFAndOr3.getArguments().add(blobCFAndOr3Geq2);&#xA;&#xA;&#x9;&#x9;blobCFAnd.getArguments().add(blobCFAndOr1);&#xA;&#x9;&#x9;blobCFAnd.getArguments().add(blobCFAndOr2);&#xA;&#x9;&#x9;blobCFAnd.getArguments().add(blobCFAndOr3);&#xA;&#x9;&#x9;blobCF.setRootOperator(blobCFAnd);&#xA;&#x9;&#x9;setFormula(blobCF);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="partialDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForPartialDetection(T_maxClientConnects, T_maxSupplierConnects, T_maxSentMsgs, T_maxReceivedMsgs);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> components = ((Model) Manager.getInstance(UMLManager.getInstance()).getModel())&#xA;&#x9;&#x9;&#x9;&#x9;.getNestedPackages().get(0).getNestedPackages().get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element c : components) {&#xA;&#x9;&#x9;&#x9;if (c instanceof Component &amp;&amp; c.getAppliedStereotype(&quot;PaRunTInstance&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Component) c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxClientConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSupplierConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSentMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxReceivedMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="fullDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForFullDetection(T_maxClientConnects, T_maxSupplierConnects, T_maxSentMsgs, T_maxReceivedMsgs,&#xA;&#x9;&#x9;&#x9;&#x9;T_maxHwUtil, T_minNetUtil);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> components = ((Model) Manager.getInstance(UMLManager.getInstance()).getModel())&#xA;&#x9;&#x9;&#x9;&#x9;.getNestedPackages().get(0).getNestedPackages().get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element c : components) {&#xA;&#x9;&#x9;&#x9;if (c instanceof Component &amp;&amp; c.getAppliedStereotype(&quot;PaRunTInstance&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Component) c);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxClientConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSupplierConnects" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxSentMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxReceivedMsgs" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minNetUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="log" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_numClientConnectsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_numSupplierConnectsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_numSentMsgsSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_numReceivedMsgsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_hwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_netUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxClientConnectsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxSupplierConnectsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxSentMsgsSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxReceivedMsgsSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxHwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_minNetUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="contextualElement"
            lowerBound="1" eType="#//actions/UML/Component"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="CpsPA" eSuperTypes="#//antipatterns/performance/PerformanceAntipattern">
        <eOperations name="setParametersForPartialDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;if (getF_queueLengthSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_queueLengthSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getF_queueLengthSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_queueLengthSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxQueueLengthSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxQueueLengthSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getT_maxQueueLengthSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxQueueLengthSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getF_overUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_overUtilSVP().getResolvingExpr() != null || !getF_overUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_overUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxOverUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxOverUtilSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getT_maxOverUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxOverUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getF_underUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_underUtilSVP().getResolvingExpr() != null || !getF_underUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_underUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_minUnderUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_minUnderUtilSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getT_minUnderUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_minUnderUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;// if(getF_opDemandMVP() != null)&#xA;&#x9;&#x9;// if(getF_opDemandMVP().getResolvingExpr() != null ||&#xA;&#x9;&#x9;// !getF_opDemandMVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;// getF_opDemandMVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;setF_opDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOpDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_opDemandMVP());&#xA;&#xA;&#x9;&#x9;// if(getT_maxOpDemandMVP() != null)&#xA;&#x9;&#x9;// if(getT_maxOpDemandMVP().getResolvingExpr() != null ||&#xA;&#x9;&#x9;// !getT_maxOpDemandMVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;// getT_maxOpDemandMVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;setT_maxOpDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxOpDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxOpDemandMVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxOpDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="setParametersForFullDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_queueLengthSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getQueueLengthQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_queueLengthSVP());&#xA;&#xA;&#x9;&#x9;setT_maxQueueLengthSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxQueueLength)));&#xA;&#x9;&#x9;blobParams.add(getT_maxQueueLengthSVP());&#xA;&#xA;&#x9;&#x9;setF_overUtilSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOverUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_overUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_maxOverUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxOverUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_maxOverUtilSVP());&#xA;&#xA;&#x9;&#x9;setF_underUtilSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getUnderUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_underUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_minUnderUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_minUnderUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_minUnderUtilSVP());&#xA;&#xA;&#x9;&#x9;setF_opDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOpDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_opDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_maxOpDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxOpDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxOpDemandMVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxQueueLength" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxOverUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxOpDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="createFormula" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="FOLSpecification cpsCF = LogicalSpecificationFactory.eINSTANCE.createFOLSpecification();&#xA;&#x9;&#x9;cpsCF.setName(&quot;CpsFormula&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator cpsCFAnd = LogicalSpecificationFactory.eINSTANCE.createAndOperator();&#xA;&#xA;&#x9;&#x9;GreaterEqualOperator cpsCFAndGeq1 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;cpsCFAndGeq1.setLhs(getF_queueLengthSVP());&#xA;&#x9;&#x9;cpsCFAndGeq1.setRhs(getT_maxQueueLengthSVP());&#xA;&#x9;&#x9;cpsCFAnd.getArguments().add(cpsCFAndGeq1);&#xA;&#xA;&#x9;&#x9;AndOperator cpsCFAndAnd = LogicalSpecificationFactory.eINSTANCE.createAndOperator();&#xA;&#x9;&#x9;GreaterEqualOperator cpsCFAndAndGeq = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;cpsCFAndAndGeq.setLhs(getF_overUtilSVP());&#xA;&#x9;&#x9;cpsCFAndAndGeq.setRhs(getT_maxOverUtilSVP());&#xA;&#x9;&#x9;cpsCFAndAnd.getArguments().add(cpsCFAndAndGeq);&#xA;&#x9;&#x9;LessOperator cpsCFAndAndLe = LogicalSpecificationFactory.eINSTANCE.createLessOperator();&#xA;&#x9;&#x9;cpsCFAndAndLe.setLhs(getF_underUtilSVP());&#xA;&#x9;&#x9;cpsCFAndAndLe.setRhs(getT_minUnderUtilSVP());&#xA;&#x9;&#x9;cpsCFAndAnd.getArguments().add(cpsCFAndAndLe);&#xA;&#x9;&#x9;cpsCFAnd.getArguments().add(cpsCFAndAnd);&#xA;&#xA;&#x9;&#x9;GreaterEqualOperator cpsCFAndGeq2 = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;cpsCFAndGeq2.setLhs(getF_opDemandMVP());&#xA;&#x9;&#x9;cpsCFAndGeq2.setRhs(getT_maxOpDemandMVP());&#xA;&#x9;&#x9;cpsCFAnd.getArguments().add(cpsCFAndGeq2);&#xA;&#xA;&#x9;&#x9;cpsCF.setRootOperator(cpsCFAnd);&#xA;&#x9;&#x9;setFormula(cpsCF);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="partialDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForPartialDetection(T_maxOpDemand);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> nodes = ((Model)Manager.getInstance(UMLManager.getInstance())).getModel().getNestedPackages().get(0).getNestedPackages().get(0)&#xA;&#x9;&#x9;&#x9;&#x9;.allOwnedElements();&#xA;&#x9;&#x9;for (Element n : nodes) {&#xA;&#x9;&#x9;&#x9;if (n instanceof Component &amp;&amp; n.getAppliedStereotype(&quot;GaExecHost&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Node) n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxOpDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="fullDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForFullDetection(T_maxQueueLength, T_maxOverUtil, T_minUnderUtil, T_maxOpDemand);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> nodes = ((Model)Manager.getInstance(UMLManager.getInstance())).getModel().getNestedPackages().get(0).getNestedPackages().get(0)&#xA;&#x9;&#x9;&#x9;&#x9;.allOwnedElements();&#xA;&#x9;&#x9;for (Element n : nodes) {&#xA;&#x9;&#x9;&#x9;if (n instanceof Node &amp;&amp; n.getAppliedStereotype(&quot;GaExecHost&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Node) n);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxQueueLength" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxOverUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxOpDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="log" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_queueLengthSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_overUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_underUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_opDemandMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxQueueLengthSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxOverUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_minUnderUtilSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxOpDemandMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="contextualElement"
            lowerBound="1" eType="#//actions/UML/Node"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="PafPA" eSuperTypes="#//antipatterns/performance/PerformanceAntipattern">
        <eOperations name="setParametersForPartialDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_resDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getResDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_resDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_maxResDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxResDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxResDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_opProbExecSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOpProbExecQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_opProbExecSVP());&#xA;&#xA;&#x9;&#x9;setT_opProbExecSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_opProbExec)));&#xA;&#x9;&#x9;blobParams.add(getT_opProbExecSVP());&#xA;&#xA;&#x9;&#x9;if (getF_hwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_hwUtilSVP().getResolvingExpr() != null || !getF_hwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_hwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxHwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxHwUtilSVP().getResolvingExpr() != null || !getT_maxHwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxHwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getF_serviceThroughputSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_serviceThroughputSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getF_serviceThroughputSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_serviceThroughputSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_minServiceThroughputSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_minServiceThroughputSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getT_minServiceThroughputSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_minServiceThroughputSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxResDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_opProbExec" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="setParametersForFullDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_resDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getResDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_resDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_maxResDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxResDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxResDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_opProbExecSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOpProbExecQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_opProbExecSVP());&#xA;&#xA;&#x9;&#x9;setT_opProbExecSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_opProbExec)));&#xA;&#x9;&#x9;blobParams.add(getT_opProbExecSVP());&#xA;&#xA;&#x9;&#x9;setF_hwUtilSVP(Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;.createSingleValueParameter(OclStringManager.getInstance(null).getHwUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_hwUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_maxHwUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxHwUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_maxHwUtilSVP());&#xA;&#xA;&#x9;&#x9;setF_serviceThroughputSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getServiceThroughputQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_serviceThroughputSVP());&#xA;&#xA;&#x9;&#x9;setT_minServiceThroughputSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_minServiceThroughput)));&#xA;&#x9;&#x9;blobParams.add(getT_minServiceThroughputSVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxResDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_opProbExec" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minServiceThroughput" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="createFormula" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="FOLSpecification pafCF = LogicalSpecificationFactory.eINSTANCE.createFOLSpecification();&#xA;&#x9;&#x9;pafCF.setName(&quot;PafFormula&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator pafCFAnd = LogicalSpecificationFactory.eINSTANCE.createAndOperator();&#xA;&#xA;&#x9;&#x9;GreaterEqualOperator pafCFAndGeq = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;pafCFAndGeq.setLhs(getF_resDemandMVP());&#xA;&#x9;&#x9;pafCFAndGeq.setRhs(getT_maxResDemandMVP());&#xA;&#x9;&#x9;pafCFAnd.getArguments().add(pafCFAndGeq);&#xA;&#xA;&#x9;&#x9;EqualOperator pafCFAndEq = LogicalSpecificationFactory.eINSTANCE.createEqualOperator();&#xA;&#x9;&#x9;pafCFAndEq.setLhs(getF_opProbExecSVP());&#xA;&#x9;&#x9;pafCFAndEq.setRhs(getT_opProbExecSVP());&#xA;&#x9;&#x9;pafCFAnd.getArguments().add(pafCFAndEq);&#xA;&#xA;&#x9;&#x9;OrOperator pafCFAndOr = LogicalSpecificationFactory.eINSTANCE.createOrOperator();&#xA;&#x9;&#x9;GreaterEqualOperator pafCFAndOrGeq = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;pafCFAndOrGeq.setLhs(getF_hwUtilSVP());&#xA;&#x9;&#x9;pafCFAndOrGeq.setRhs(getT_maxHwUtilSVP());&#xA;&#x9;&#x9;LessOperator pafCFAndOrLe = LogicalSpecificationFactory.eINSTANCE.createLessOperator();&#xA;&#x9;&#x9;pafCFAndOrLe.setLhs(getF_serviceThroughputSVP());&#xA;&#x9;&#x9;pafCFAndOrLe.setRhs(getT_minServiceThroughputSVP());&#xA;&#x9;&#x9;pafCFAndOr.getArguments().add(pafCFAndOrGeq);&#xA;&#x9;&#x9;pafCFAndOr.getArguments().add(pafCFAndOrLe);&#xA;&#x9;&#x9;pafCFAnd.getArguments().add(pafCFAndOr);&#xA;&#xA;&#x9;&#x9;pafCF.setRootOperator(pafCFAnd);&#xA;&#x9;&#x9;setFormula(pafCF);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="partialDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForPartialDetection(T_maxResDemand, T_opProbExec);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> operations = ((Model)Manager.getInstance(UMLManager.getInstance())).getModel().getNestedPackages().get(0).getNestedPackages()&#xA;&#x9;&#x9;&#x9;&#x9;.get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element o : operations) {&#xA;&#x9;&#x9;&#x9;if (o instanceof Operation &amp;&amp; o.getAppliedStereotype(&quot;GaAcqStep&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Operation) o);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxResDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_opProbExec" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="fullDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForFullDetection(T_maxResDemand, T_opProbExec, T_maxHwUtil, T_minServiceThroughput);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> operations = ((Model) Manager.getInstance(UMLManager.getInstance())).getModel()&#xA;&#x9;&#x9;&#x9;&#x9;.getNestedPackages().get(0).getNestedPackages().get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element o : operations) {&#xA;&#x9;&#x9;&#x9;if (o instanceof Operation &amp;&amp; o.getAppliedStereotype(&quot;GaAcqStep&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Operation) o);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxResDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_opProbExec" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minServiceThroughput" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="log" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_resDemandMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_opProbExecSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_hwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_serviceThroughputSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxResDemandMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_opProbExecSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxHwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_minServiceThroughputSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="contextualElement"
            lowerBound="1" eType="#//actions/UML/Operation"/>
      </eClassifiers>
      <eClassifiers xsi:type="ecore:EClass" name="EpPA" eSuperTypes="#//antipatterns/performance/PerformanceAntipattern">
        <eOperations name="setParametersForPartialDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_overDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOverDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_overDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_maxOverDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxOverDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxOverDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_underDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getUnderDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_underDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_minUnderDemandMVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_minUnderDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_minUnderDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_overDemandProbSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOverDemandProbQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_overDemandProbSVP());&#xA;&#xA;&#x9;&#x9;setF_underDemandProbSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getUnderDemandProbQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_underDemandProbSVP());&#xA;&#xA;&#x9;&#x9;setT_demandsProbSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_demandsProb)));&#xA;&#x9;&#x9;blobParams.add(getT_demandsProbSVP());&#xA;&#xA;&#x9;&#x9;if (getF_hwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_hwUtilSVP().getResolvingExpr() != null || !getF_hwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_hwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxHwUtilSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxHwUtilSVP().getResolvingExpr() != null || !getT_maxHwUtilSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxHwUtilSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getF_serviceResponseTimeSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getF_serviceResponseTimeSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getF_serviceResponseTimeSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getF_serviceResponseTimeSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;if (getT_maxServiceResponseTimeSVP() != null)&#xA;&#x9;&#x9;&#x9;if (getT_maxServiceResponseTimeSVP().getResolvingExpr() != null&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;|| !getT_maxServiceResponseTimeSVP().getResolvingExpr().equals(&quot;&quot;))&#xA;&#x9;&#x9;&#x9;&#x9;getT_maxServiceResponseTimeSVP().setResolvingExpr(null);&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxOverDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_demandsProb" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="setParametersForFullDetection" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="List&lt;Parameter> blobParams = new ArrayList&lt;>();&#xA;&#xA;&#x9;&#x9;setF_overDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOverDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_overDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_maxOverDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_maxOverDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_maxOverDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_underDemandMVP(Manager.getInstance(null).createMultipleValuedParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getUnderDemandQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_underDemandMVP());&#xA;&#xA;&#x9;&#x9;setT_minUnderDemandMVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createMultipleValuedParameter(String.valueOf(T_minUnderDemand)));&#xA;&#x9;&#x9;blobParams.add(getT_minUnderDemandMVP());&#xA;&#xA;&#x9;&#x9;setF_overDemandProbSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getOverDemandProbQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_overDemandProbSVP());&#xA;&#xA;&#x9;&#x9;setF_underDemandProbSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getUnderDemandProbQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_underDemandProbSVP());&#xA;&#xA;&#x9;&#x9;setT_demandsProbSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_demandsProb)));&#xA;&#x9;&#x9;blobParams.add(getT_demandsProbSVP());&#xA;&#xA;&#x9;&#x9;setF_hwUtilSVP(Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;.createSingleValueParameter(OclStringManager.getInstance(null).getHwUtilQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_hwUtilSVP());&#xA;&#xA;&#x9;&#x9;setT_maxHwUtilSVP(Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxHwUtil)));&#xA;&#x9;&#x9;blobParams.add(getT_maxHwUtilSVP());&#xA;&#xA;&#x9;&#x9;setF_serviceResponseTimeSVP(Manager.getInstance(null).createSingleValueParameter(&#xA;&#x9;&#x9;&#x9;&#x9;OclStringManager.getInstance(null).getServiceResponseTimeQuery(getContextualElement())));&#xA;&#x9;&#x9;blobParams.add(getF_serviceResponseTimeSVP());&#xA;&#xA;&#x9;&#x9;setT_maxServiceResponseTimeSVP(&#xA;&#x9;&#x9;&#x9;&#x9;Manager.getInstance(null).createSingleValueParameter(String.valueOf(T_maxServiceResponseTime)));&#xA;&#x9;&#x9;blobParams.add(getT_maxServiceResponseTimeSVP());&#xA;&#xA;&#x9;&#x9;getParameters().addAll(blobParams);"/>
          </eAnnotations>
          <eParameters name="T_maxOverDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_demandsProb" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxServiceResponseTime" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="createFormula" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="FOLSpecification epCF = LogicalSpecificationFactory.eINSTANCE.createFOLSpecification();&#xA;&#x9;&#x9;epCF.setName(&quot;EpFormula&quot;);&#xA;&#xA;&#x9;&#x9;AndOperator epCFAnd = LogicalSpecificationFactory.eINSTANCE.createAndOperator();&#xA;&#xA;&#x9;&#x9;GreaterEqualOperator epAndGeq = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;epAndGeq.setLhs(getF_overDemandMVP());&#xA;&#x9;&#x9;epAndGeq.setRhs(getT_maxOverDemandMVP());&#xA;&#x9;&#x9;epCFAnd.getArguments().add(epAndGeq);&#xA;&#xA;&#x9;&#x9;LessOperator blobCFAndLe = LogicalSpecificationFactory.eINSTANCE.createLessOperator();&#xA;&#x9;&#x9;blobCFAndLe.setLhs(getF_underDemandMVP());&#xA;&#x9;&#x9;blobCFAndLe.setRhs(getT_minUnderDemandMVP());&#xA;&#x9;&#x9;epCFAnd.getArguments().add(blobCFAndLe);&#xA;&#xA;&#x9;&#x9;EqualOperator epCFAndEq = LogicalSpecificationFactory.eINSTANCE.createEqualOperator();&#xA;&#x9;&#x9;epCFAndEq.setLhs(getF_demandSumProbSVP());&#xA;&#x9;&#x9;epCFAndEq.setRhs(getT_demandsProbSVP());&#xA;&#x9;&#x9;epCFAnd.getArguments().add(epCFAndEq);&#xA;&#xA;&#x9;&#x9;OrOperator epCFAndOr = LogicalSpecificationFactory.eINSTANCE.createOrOperator();&#xA;&#x9;&#x9;GreaterEqualOperator epCFAndOrGeq = LogicalSpecificationFactory.eINSTANCE.createGreaterEqualOperator();&#xA;&#x9;&#x9;epCFAndOrGeq.setLhs(getF_hwUtilSVP());&#xA;&#x9;&#x9;epCFAndOrGeq.setRhs(getT_maxHwUtilSVP());&#xA;&#x9;&#x9;GreaterOperator epCFAndOrGr = LogicalSpecificationFactory.eINSTANCE.createGreaterOperator();&#xA;&#x9;&#x9;epCFAndOrGr.setLhs(getF_serviceResponseTimeSVP());&#xA;&#x9;&#x9;epCFAndOrGr.setRhs(getT_maxServiceResponseTimeSVP());&#xA;&#x9;&#x9;epCFAndOr.getArguments().add(epCFAndOrGeq);&#xA;&#x9;&#x9;epCFAndOr.getArguments().add(epCFAndOrGr);&#xA;&#x9;&#x9;epCFAnd.getArguments().add(epCFAndOr);&#xA;&#xA;&#x9;&#x9;epCF.setRootOperator(epCFAnd);&#xA;&#x9;&#x9;setFormula(epCF);"/>
          </eAnnotations>
        </eOperations>
        <eOperations name="partialDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForPartialDetection(T_maxOverDemand, T_minUnderDemand, T_demandsProb);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> operations = ((Model)Manager.getInstance(UMLManager.getInstance())).getModel().getNestedPackages().get(0).getNestedPackages()&#xA;&#x9;&#x9;&#x9;&#x9;.get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element o : operations) {&#xA;&#x9;&#x9;&#x9;if (o instanceof Operation &amp;&amp; o.getAppliedStereotype(&quot;GaAcqStep&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Operation) o);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxOverDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_demandsProb" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="fullDetection" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EInt">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="int occurrences = 0;&#xA;&#x9;&#x9;setParametersForFullDetection(T_maxOverDemand, T_minUnderDemand, T_demandsProb, T_maxHwUtil,&#xA;&#x9;&#x9;&#x9;&#x9;T_maxServiceResponseTime);&#xA;&#x9;&#x9;createFormula();&#xA;&#x9;&#x9;List&lt;Element> operations =((Model)Manager.getInstance(UMLManager.getInstance())).getModel().getNestedPackages().get(0).getNestedPackages()&#xA;&#x9;&#x9;&#x9;&#x9;.get(0).allOwnedElements();&#xA;&#x9;&#x9;for (Element o : operations) {&#xA;&#x9;&#x9;&#x9;if (o instanceof Operation &amp;&amp; o.getAppliedStereotype(&quot;GaAcqStep&quot;) != null) {&#xA;&#x9;&#x9;&#x9;&#x9;try {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;boolean app = Manager.getInstance(null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;.evaluateOperator((AndOperator) getFormula().getRootOperator(), (Operation) o);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (app)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;occurrences++;&#xA;&#x9;&#x9;&#x9;&#x9;} catch (ParserException e) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// TODO Auto-generated catch block&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;e.printStackTrace();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;return occurrences;"/>
          </eAnnotations>
          <eParameters name="T_maxOverDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_minUnderDemand" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_demandsProb" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxHwUtil" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
          <eParameters name="T_maxServiceResponseTime" lowerBound="1" eType="ecore:EDataType http://www.eclipse.org/emf/2002/Ecore#//EDouble"/>
        </eOperations>
        <eOperations name="log" lowerBound="1">
          <eAnnotations source="http://www.eclipse.org/emf/2002/GenModel">
            <details key="body" value="super.log();"/>
          </eAnnotations>
        </eOperations>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_overDemandMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_underDemandMVP" lowerBound="1"
            eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_overDemandProbSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_demandSumProbSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_underDemandProbSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_hwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="F_serviceResponseTimeSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxOverDemandMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_minUnderDemandMVP"
            lowerBound="1" eType="#//MultipleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_demandsProbSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxHwUtilSVP" lowerBound="1"
            eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EReference" name="T_maxServiceResponseTimeSVP"
            lowerBound="1" eType="#//SingleValuedParameter"/>
        <eStructuralFeatures xsi:type="ecore:EAttribute" name="contextualElement"
            lowerBound="1" eType="#//actions/UML/Operation"/>
      </eClassifiers>
    </eSubpackages>
  </eSubpackages>
</ecore:EPackage>
