ARCHI_TYPE fta(
		   const rate workload := 190.815,
		   const rate wsn_rate := 1.457,
		   const rate channel_rate := 2.562,
		   const rate fta_rate := 6.634,
		   const rate packet_rate := 4.482,
		   const rate ShowMap_rate := 0.977,
		   const rate lan_db_rate := 3.829,
		   const rate lan_desk_rate := 9.945,
		   const rate lan_sec_rate := 0.839,
		   const rate lan_fta_rate := 6.945,
		   const rate db_rate := 0.538,
		   const rate dec_rate := 0.139)


ARCHI_ELEM_TYPES

    ELEM_TYPE Wsn_Type(const rate workload, const rate wsn_rate)

		BEHAVIOR

					SendData(	 void;void) =
					<generate_data, exp(workload)> .

					choice{
					   <keep, inf(1,0.9)> . <send_data, exp(wsn_rate)> . SendData(),
						 <lose, inf(1, 0.1)> . <fail, exp(1)> . SendData()
					}
		INPUT_INTERACTIONS

			UNI generate_data

		OUTPUT_INTERACTIONS

			UNI send_data;
			fail

    ELEM_TYPE Channel_Type(const rate channel_rate)

		BEHAVIOR

					Channel(	 void;void) = <receive_data, _> . <forward_data, exp(channel_rate)> . Channel()
		INPUT_INTERACTIONS

			UNI receive_data

		OUTPUT_INTERACTIONS

			UNI forward_data

    ELEM_TYPE Fta_Type(const rate fta_rate,const rate packet_rate)

		BEHAVIOR

					Fta(	 void;void) = <receive, _> . <packet_data, exp(packet_rate)> . <sendto_security, _> . <receive_decrypted, _> . <process_data, exp(fta_rate)> . <sendto_db, _> . <sendto_desktop, _> . Fta()
		INPUT_INTERACTIONS

			UNI receive;
			receive_decrypted

		OUTPUT_INTERACTIONS

			UNI sendto_db;
			sendto_desktop;
			sendto_security;
			process_data;
			packet_data

    ELEM_TYPE Lan_Type(const rate lan_db_rate, const rate lan_desk_rate, const rate lan_sec_rate, const rate lan_fta_rate)

		BEHAVIOR

					availability(void;void)=
						choice{
							<keep, inf(1, 0.9)> . Lan(),
							<lose, inf(1, 0.1)> . <fail, exp(1)> . availability()
						};


					Lan(	 void;void) = choice
					{
						<lanto_db, inf> . <frwdto_db, exp(lan_db_rate)> . availability(),
						<lanto_desk, inf> . <frwdto_desk, exp(lan_desk_rate)> . availability(),
						<lanto_sec, inf> . <frwdto_sec, exp(lan_sec_rate)> .availability(),
						<lanto_fta, inf> . <frwdto_fta, exp(lan_fta_rate)> .availability()
					}
		INPUT_INTERACTIONS

			UNI lanto_db;
			lanto_desk;
			lanto_sec;
			lanto_fta

		OUTPUT_INTERACTIONS

			UNI frwdto_db;
			frwdto_desk;
			frwdto_sec;
			frwdto_fta;
			fail

    ELEM_TYPE Desk_Type(const rate ShowMap_rate)

		BEHAVIOR

					ShowMap(	 void;void) = <receive_map, _> . <show_map, exp(ShowMap_rate)> . ShowMap()
		INPUT_INTERACTIONS

			UNI receive_map

		OUTPUT_INTERACTIONS

			UNI show_map

    ELEM_TYPE DB_Type(const rate db)

		BEHAVIOR

					StoreData(	 void;void) = <receive_fta_data, _> . <store_data, exp(db)> . StoreData()
		INPUT_INTERACTIONS

			UNI receive_fta_data

		OUTPUT_INTERACTIONS

			UNI store_data

    ELEM_TYPE Sec_Type(const rate dec_rate)

		BEHAVIOR

					Security(	 void;void) = <receive_ftas, _> . <decrypt_data, exp(dec_rate)> . <sendto_fta, _> . Security()
		INPUT_INTERACTIONS

			UNI receive_ftas

		OUTPUT_INTERACTIONS

			UNI sendto_fta;
			decrypt_data



ARCHI_TOPOLOGY

           ARCHI_ELEM_INSTANCES
					WSN : Wsn_Type( workload, wsn_rate);
                    CHN : Channel_Type( channel_rate);
                    FTA : Fta_Type( fta_rate, packet_rate);
                    LAN : Lan_Type( lan_db_rate, lan_desk_rate, lan_sec_rate, lan_fta_rate);
                    DB : DB_Type( db_rate);
                    DSK : Desk_Type( ShowMap_rate);
                    SCR : Sec_Type( dec_rate)

		   ARCHI_INTERACTIONS
					WSN.generate_data;
					DB.store_data;
					DSK.show_map;
					SCR.decrypt_data;
					FTA.process_data;
					FTA.packet_data;
					WSN.fail;
					LAN.fail

		   ARCHI_ATTACHMENTS
					FROM WSN.send_data TO CHN.receive_data;
					FROM CHN.forward_data TO FTA.receive;
					FROM FTA.sendto_db TO LAN.lanto_db;
					FROM FTA.sendto_desktop TO LAN.lanto_desk;
					FROM FTA.sendto_security TO LAN.lanto_sec;
					FROM LAN.frwdto_desk TO DSK.receive_map;
					FROM LAN.frwdto_db TO DB.receive_fta_data;
					FROM LAN.frwdto_fta TO FTA.receive_decrypted;
					FROM LAN.frwdto_sec TO SCR.receive_ftas;
					FROM SCR.sendto_fta TO LAN.lanto_fta

END
