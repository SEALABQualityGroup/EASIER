ARCHI_TYPE fta(
		   const rate wsn := 1000,	
		   const rate channel_rate := 50,	
		   const rate fta_r := 50000,	
		   const rate packet := 10,	
		   const rate ShowMap_r := 5000,	
		   const rate lan_rate := 200,	
		   const rate db := 200,	
		   const rate dec := 25)	
			

ARCHI_ELEM_TYPES

    ELEM_TYPE Wsn_Type(const rate wsn)
	
		BEHAVIOR
 
					SendData(	 void;void) = <generate_data, exp(wsn)> . <send_data, inf> . SendData()	
		INPUT_INTERACTIONS	
					
			UNI generate_data

		OUTPUT_INTERACTIONS
					
			UNI send_data

    ELEM_TYPE Channel_Type(const rate channel_rate)
	
		BEHAVIOR
 
					Channel(	 void;void) = <receive_data, _> . <forward_data, exp(channel_rate)> . Channel()	
		INPUT_INTERACTIONS	
					
			UNI receive_data

		OUTPUT_INTERACTIONS
					
			UNI forward_data

    ELEM_TYPE Fta_Type(const rate fta_r,const rate packet)
	
		BEHAVIOR
 
					Fta(	 void;void) = <receive, _> . <packet_data, exp(packet)> . <sendto_security, _> . <receive_decrypted, _> . <process_data, exp(fta_r)> . <sendto_db, _> . <sendto_desktop, _> . Fta()	
		INPUT_INTERACTIONS	
					
			UNI receive;
			receive_decrypted

		OUTPUT_INTERACTIONS
					
			UNI sendto_db;
			sendto_desktop;
			sendto_security;
			process_data;
			packet_data

    ELEM_TYPE Lan_Type(const rate lan_rate)
	
		BEHAVIOR
 
					Lan(	 void;void) = choice
					{
						<lanto_db, inf> . <frwdto_db, exp(lan_rate)> . Lan(),
						<lanto_desk, inf> . <frwdto_desk, exp(lan_rate)> . Lan(),
						<lanto_sec, inf> . <frwdto_sec, exp(lan_rate)> . Lan(),
						<lanto_fta, inf> . <frwdto_fta, exp(lan_rate)> . Lan()		
					}	
		INPUT_INTERACTIONS	
					
			UNI lanto_db;
			lanto_desk;
			lanto_sec;
			lanto_fta

		OUTPUT_INTERACTIONS
					
			UNI frwdto_db;
			frwdto_desk;
			frwdto_sec;
			frwdto_fta

    ELEM_TYPE Desk_Type(const rate ShowMap_r)
	
		BEHAVIOR
 
					ShowMap(	 void;void) = <receive_map, _> . <show_map, exp(ShowMap_r)> . ShowMap()	
		INPUT_INTERACTIONS	
					
			UNI receive_map

		OUTPUT_INTERACTIONS
					
			UNI show_map

    ELEM_TYPE DB_Type(const rate db)
	
		BEHAVIOR
 
					StoreData(	 void;void) = <receive_fta_data, _> . <store_data, exp(db)> . StoreData()	
		INPUT_INTERACTIONS	
					
			UNI receive_fta_data

		OUTPUT_INTERACTIONS
					
			UNI store_data

    ELEM_TYPE Sec_Type(const rate dec)
	
		BEHAVIOR
 
					Security(	 void;void) = <receive_ftas, _> . <decrypt_data, exp(dec)> . <sendto_fta, _> . Security()	
		INPUT_INTERACTIONS	
					
			UNI receive_ftas

		OUTPUT_INTERACTIONS
					
			UNI sendto_fta;
			decrypt_data

				

ARCHI_TOPOLOGY
				
           ARCHI_ELEM_INSTANCES
					WSN : Wsn_Type( wsn);
                    CHN : Channel_Type( channel_rate);
                    FTA : Fta_Type( fta_r, packet);
                    LAN : Lan_Type( lan_rate);
                    DB : DB_Type( db);
                    DSK : Desk_Type( ShowMap_r);
                    SCR : Sec_Type( dec)

		   ARCHI_INTERACTIONS	
					WSN.generate_data;
					DB.store_data;
					DSK.show_map;
					SCR.decrypt_data;
					FTA.process_data;
					FTA.packet_data

		   ARCHI_ATTACHMENTS
					FROM WSN.send_data TO CHN.receive_data;
					FROM CHN.forward_data TO FTA.receive;
					FROM FTA.sendto_db TO LAN.lanto_db;
					FROM FTA.sendto_desktop TO LAN.lanto_desk;
					FROM FTA.sendto_security TO LAN.lanto_sec;
					FROM LAN.frwdto_desk TO DSK.receive_map;
					FROM LAN.frwdto_db TO DB.receive_fta_data;
					FROM LAN.frwdto_fta TO FTA.receive_decrypted;
					FROM LAN.frwdto_sec TO SCR.receive_ftas;
					FROM SCR.sendto_fta TO LAN.lanto_fta
				
END

